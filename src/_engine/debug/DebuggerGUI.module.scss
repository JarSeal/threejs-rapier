@use 'sass:color';
@use '../styles/variables.scss';

.debuggerGUI {
  position: fixed;
  top: 0;
  right: variables.$drawerWidth * -1;
  z-index: 10200;
  background-color: variables.$debugGuiBackground;
  width: variables.$drawerWidth;
  height: 100%;
  padding: 1.2rem;
  transition: right 0.2s ease-in-out;

  @media screen and (max-width: variables.$breakpointSmall) {
    width: variables.$drawerWidthSmall;
  }
  @media screen and (max-width: variables.$breakpointXSmall) {
    width: 100%;
  }
}

.debuggerGUI_open {
  right: 0;
}

.debuggerGUI_closed {
  right: variables.$drawerWidth * -1;

  @media screen and (max-width: variables.$breakpointSmall) {
    right: variables.$drawerWidthSmall * -1;
  }
  @media screen and (max-width: variables.$breakpointXSmall) {
    right: -100%;
  }
}

.debugDrawerToggler,
.debugDrawerToggler:global(.MIDDLE) {
  @include variables.nakedButton;
  position: absolute;
  right: 100%;
  top: 50%;
  transform: translate3d(3.1rem, -50%, 0) rotate(-90deg);
  height: 3rem;
  padding: 0 2rem;
  border-radius: 0.4rem 0.4rem 0 0;
  background: variables.$debugGuiBackground;
  color: variables.$debugTextColor;
  user-select: none;
  transition: background 0.2s ease-in-out;

  &:hover {
    background: variables.$debugGuiBackgroundLighter;
  }
}
.debugDrawerToggler:global(.TOP) {
  top: 10%;
}
.debugDrawerToggler:global(.BOTTOM) {
  top: auto;
  bottom: 10%;
}

.debugDrawerTabsMenu {
  position: relative;
  margin-bottom: 1.2rem;
}

.debugDrawerTabButton {
  @include variables.nakedButton;
  margin-right: -0.1rem;
  margin-bottom: -0.1rem;
  padding: 0.6rem 1.2rem 0.4rem;
  background-color: variables.$debugTabButton;
  border: 0.1rem solid variables.$debugTextColor;
  color: variables.$debugTextColor;
  user-select: none;
  font-size: 1rem;
  transition: background-color 0.2s ease-in-out;

  &:hover:not(.debugDrawerTabButton_selected) {
    background-color: rgba(255, 255, 255, 0.25);
  }
}

.debugDrawerTabButton_selected {
  background-color: variables.$debugTextColor;
  border: 0.1rem solid transparent;
  color: variables.$black;
}

.debugDrawerTabsContainer {
  color: variables.$debugTextColor;
  overflow: auto;
  scrollbar-color: variables.$debugTextColor variables.$debugGuiBackground;
}

.childContainer {
  :global(.debuggerTabHeading) {
    margin-top: 1rem;
    margin-bottom: 1rem;
    font-size: 1.8rem;

    :global(.uiIcon) {
      display: inline-block;
      width: 1.4rem;
      margin-right: 0.2rem;
    }
  }

  &:first-of-type {
    :global(.debuggerHeading) {
      margin-top: 0 !important;
    }
  }
}

.debugCurrentSceneTitle {
  width: 100%;
  height: 3rem;
  padding: 0.4rem 0 0.8rem;
  padding-right: 3rem;
  position: relative;
  color: variables.$debugTextColor;

  .closeBtn {
    @include variables.nakedButton;
    background-color: transparent;
    width: 2.4rem;
    height: 2.4rem;
    margin: 0;
    position: absolute;
    top: 0;
    right: 0;
    border-radius: 0.4rem;
    transition: background-color 0.2s ease-in-out;

    &:hover {
      background-color: rgba(variables.$debugTextColor, 0.2);
    }

    &:before,
    &:after {
      display: block;
      content: '';
      width: 2rem;
      height: 0.1rem;
      background: variables.$white;
      position: absolute;
      top: 50%;
      left: 0.2rem;
    }
    &:before {
      transform: rotate(45deg);
    }
    &:after {
      transform: rotate(-45deg);
    }
  }
}

.debugCurrentSceneTitleHeading {
  position: absolute;
  top: -0.8rem;
  left: 0;
  font-size: 0.8rem;
}

.debugCurrentSceneTitleText {
  font-size: 1.4rem;
}

.debuggerDisabled {
  pointer-events: none !important;

  &:after {
    display: block;
    content: '';
    transition: background 0.2s ease-in-out;
    background: repeat url('/debugger/assets/images/stripe-pattern-24x24.png') rgba(75, 59, 59, 0.2);
    background-size: 8px 8px;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
  }
}

:global(.listItemCount) {
  margin: 2.4rem 0 1.6rem;
  font-size: 1.4rem;
}

:global(ul li.emptyState) {
  padding: 2.4rem;
  color: color.adjust(variables.$debugTextColorDark, $lightness: -20%);
  font-size: 1.2rem;
  font-weight: 700;
}

:global(.ulList) {
  list-style: none;
  padding: 0;
  margin: 0;
  background-color: color.adjust(#28292e, $lightness: -2%);
  border-radius: 0.4rem;
  overflow: hidden;

  li {
    display: block;
    position: relative;
    width: 100%;
    color: variables.$debugTextColor;
    font-size: 1.2rem;

    &:nth-child(odd) {
      background-color: #28292e;
    }

    > button {
      @include variables.nakedButton;
      background: none;
      display: block;
      width: 100%;
      text-align: left;
      color: variables.$debugTextColor;
      transition: background-color 0.075s ease-in-out;

      &:hover {
        background-color: rgba(255, 255, 255, 0.1);
      }

      &:focus {
        &:before {
          display: block;
          content: '';
          width: 0.2rem;
          height: 100%;
          position: absolute;
          left: 0;
          top: 0;
          background-color: rgba(255, 255, 255, 0.9);
        }
      }
    }

    &:global(.selected) {
      &:before {
        display: block;
        content: '';
        width: 0.4rem;
        height: 100%;
        position: absolute;
        left: 0;
        top: 0;
        background-color: variables.$debugTextColor;
      }
    }
  }
}

ul li :global(.listItemWithId) {
  display: flex;
  gap: 0.8rem;
  padding: 2rem 0.8rem 0.8rem;
  position: relative;

  :global(.itemId) {
    position: absolute;
    top: 0;
    font-size: 1rem;
    padding-top: 0.5rem;
    color: variables.$debugTextColorDark;
  }

  :global(.additionalInfo) {
    display: inline-block;
    font-size: 0.8rem;
    color: variables.$debugGuiBackgroundLighter;
    background-color: variables.$debugTextColorDark;
    position: absolute;
    top: 0.4rem;
    left: 100%;
    margin-left: 0.8rem;
    padding: 0.2rem 0.2rem 0 0.2rem;
    border-radius: 0.2rem;
  }

  span,
  h4 {
    display: block;
    margin: 0;
  }
}
